[{"/home/yapr9001/otherspace/redux-todo/src/components/TodoList/index.js":"1","/home/yapr9001/otherspace/redux-todo/src/App.js":"2","/home/yapr9001/otherspace/redux-todo/src/reducers/todo.js":"3","/home/yapr9001/otherspace/redux-todo/src/constants/index.js":"4","/home/yapr9001/otherspace/redux-todo/src/components/TodoItem/index.js":"5","/home/yapr9001/otherspace/redux-todo/src/reducers/index.js":"6","/home/yapr9001/otherspace/redux-todo/src/serviceWorker.js":"7","/home/yapr9001/otherspace/redux-todo/src/components/TodoItemStatus/index.js":"8","/home/yapr9001/otherspace/redux-todo/src/components/TodoInput/index.js":"9","/home/yapr9001/otherspace/redux-todo/src/index.js":"10","/home/yapr9001/otherspace/redux-todo/src/stores/index.js":"11","/home/yapr9001/otherspace/redux-todo/src/actions/alert.js":"12","/home/yapr9001/otherspace/redux-todo/src/actions/todo.js":"13","/home/yapr9001/otherspace/redux-todo/src/reducers/alerts.js":"14"},{"size":1048,"mtime":1606920198041,"results":"15","hashOfConfig":"16"},{"size":3040,"mtime":1606925121390,"results":"17","hashOfConfig":"16"},{"size":871,"mtime":1606921173095,"results":"18","hashOfConfig":"16"},{"size":966,"mtime":1606924841151,"results":"19","hashOfConfig":"16"},{"size":2034,"mtime":1606920942118,"results":"20","hashOfConfig":"16"},{"size":211,"mtime":1606924951523,"results":"21","hashOfConfig":"16"},{"size":5141,"mtime":1606385111695,"results":"22","hashOfConfig":"16"},{"size":1670,"mtime":1606744159737,"results":"23","hashOfConfig":"16"},{"size":1457,"mtime":1606918598399,"results":"24","hashOfConfig":"16"},{"size":617,"mtime":1606572077430,"results":"25","hashOfConfig":"16"},{"size":301,"mtime":1606585351940,"results":"26","hashOfConfig":"16"},{"size":688,"mtime":1606925116034,"results":"27","hashOfConfig":"16"},{"size":742,"mtime":1606923887908,"results":"28","hashOfConfig":"16"},{"size":723,"mtime":1606925112874,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"edmebe",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yapr9001/otherspace/redux-todo/src/components/TodoList/index.js",[],["63","64"],"/home/yapr9001/otherspace/redux-todo/src/App.js",["65"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux'; \r\nimport { useDispatch } from 'react-redux'; \r\nimport { v1 as uuid } from 'uuid'; \r\nimport {createTodo, resetTodo, updateTodo, taskStatus, deleteTodo} from './actions/todo'; \r\nimport { ALERT_COLOR, ALERT_TEXT } from './constants';\r\nimport TodoList from './components/TodoList';\r\nimport TodoInput from './components/TodoInput';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { createAlert } from './actions/alert';\r\n\r\nfunction App() {\r\n  const todos = useSelector(state => state.todos);\r\n  const alert = useSelector(state => state.alerts)\r\n  const [changeTaskInput, setChangeTaskInput] = useState(\"\");\r\n  const [updateTodoTask, setUpdateTodoTask] = useState({})\r\n  const [resetAlert, setResetAlert] = useState({})\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const dispatch  = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const alertTimeout = setTimeout(() => {\r\n      setResetAlert({})\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearTimeout(alertTimeout)\r\n    }\r\n  }, [alert])\r\n\r\n  const handleInputChange = (e) => {\r\n    setChangeTaskInput(e.target.value);\r\n  };\r\n\r\n  const handleCreateOrUpdateTask = (e) => {\r\n    e.preventDefault();\r\n    if(changeTaskInput && !isEdit){\r\n       dispatch(createTodo({\r\n        id: uuid(),\r\n        task: changeTaskInput,\r\n        status: ''\r\n      }))\r\n      dispatch(createAlert({text: ALERT_TEXT.CREATE, color: ALERT_COLOR.CREATE}))\r\n    }else if(changeTaskInput && isEdit){\r\n      dispatch(updateTodo({\r\n        ...updateTodoTask,\r\n        task: changeTaskInput\r\n      }))\r\n      // setAlert({text: ALERT_TEXT.UPDATE, color: ALERT_COLOR.UPDATE })\r\n    }\r\n    setChangeTaskInput(e.target.reset())\r\n    setIsEdit(false)\r\n  };\r\n\r\n  const handleEditTask = (isEdit, todo) => {\r\n    setIsEdit(isEdit)\r\n    setChangeTaskInput(todo.task)\r\n    setUpdateTodoTask(todo)\r\n  }\r\n  \r\n  const handleDeleteTask = (todo) => {\r\n    dispatch(deleteTodo(todo))\r\n    // setAlert({text: ALERT_TEXT.DELETE, color: ALERT_COLOR.DELETE})\r\n  }\r\n\r\n  const resetList = () => {\r\n    dispatch(resetTodo([]))\r\n    // setAlert({text: ALERT_TEXT.RESET, color: ALERT_COLOR.WARNING})\r\n  } \r\n\r\n  const handleStatus = (status, todo) => {\r\n    dispatch(taskStatus({\r\n      status: status,\r\n      todo: todo\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        {alert && <div class={`alert alert-${alert.color} text-center`} role=\"alert\">\r\n                {alert.text}\r\n        </div>}\r\n        <div className=\"text-center\">\r\n          <img src=\"/assets/images/todo.jpg\" width=\"auto\" height=\"300\" alt=\"header_img\"/>\r\n        </div>\r\n        <TodoInput handleInputChange={handleInputChange} handleCreateOrUpdateTask={handleCreateOrUpdateTask} isEdit={isEdit} changeTaskInput={changeTaskInput} />\r\n        <TodoList todos={todos} handleEditTask={handleEditTask} resetList={resetList} handleStatus={handleStatus} handleDeleteTask={handleDeleteTask} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/yapr9001/otherspace/redux-todo/src/reducers/todo.js",[],["66","67"],"/home/yapr9001/otherspace/redux-todo/src/constants/index.js",[],"/home/yapr9001/otherspace/redux-todo/src/components/TodoItem/index.js",[],"/home/yapr9001/otherspace/redux-todo/src/reducers/index.js",[],"/home/yapr9001/otherspace/redux-todo/src/serviceWorker.js",[],["68","69"],"/home/yapr9001/otherspace/redux-todo/src/components/TodoItemStatus/index.js",[],"/home/yapr9001/otherspace/redux-todo/src/components/TodoInput/index.js",[],["70","71"],"/home/yapr9001/otherspace/redux-todo/src/index.js",[],"/home/yapr9001/otherspace/redux-todo/src/stores/index.js",[],"/home/yapr9001/otherspace/redux-todo/src/actions/alert.js",[],"/home/yapr9001/otherspace/redux-todo/src/actions/todo.js",[],"/home/yapr9001/otherspace/redux-todo/src/reducers/alerts.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":18,"column":10,"nodeType":"78","messageId":"79","endLine":18,"endColumn":20},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"74","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'resetAlert' is assigned a value but never used.","Identifier","unusedVar",["86"],["87"],["86"],["87"],["86"],["87"],"no-global-assign","no-unsafe-negation"]